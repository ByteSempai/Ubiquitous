<%@ CodeTemplate Language="C#"%>
<%@ Assembly Name="FluorineFx.ServiceBrowser.dll" %>
<%@ Import Namespace="FluorineFx.Management" %>
<%@ Import Namespace="FluorineFx.Management.Data" %>
<%
	Project project = this.Context["Project"] as Project;
	TypeDescriptor typeDescriptor = this.Context["TypeDescriptor"] as TypeDescriptor;
	MethodDescriptor methodDescriptor = this.Context["MethodDescriptor"] as MethodDescriptor;
%>
/*
 Generated by FluorineFx
 THE DOCUMENT CREATED BY FLUORINEFX IS PROVIDED "AS IS", WITHOUT WARRANTY OR CONDITIONS 
 OF ANY KIND, EITHER EXPRESS OR IMPLIED.
*/
package <%=Context["Package"]%>.commands
{
	import mx.rpc.IResponder;
	import com.adobe.cairngorm.commands.ICommand;
	import com.adobe.cairngorm.control.CairngormEvent;
	import mx.rpc.events.*;
	import mx.controls.Alert;
	import <%=Context["Package"]%>.business.*;
	import <%=Context["Package"]%>.control.<%=Context["Class"]%>Event;
	//import <%=Context["Package"]%>.vo.*;

	public class <%=Context["Class"]%>Command implements ICommand, IResponder
	{
	  	public function <%=Context["Class"]%>Command()
		{	 
		}
			   
		public function execute( cairngormEvent : CairngormEvent ) : void
		{
			var event:<%=Context["Class"]%>Event = cairngormEvent as <%=Context["Class"]%>Event;
			var delegate:<%=typeDescriptor.Name%>Delegate = new <%=typeDescriptor.Name%>Delegate(this);
			delegate.<%=(Context["MethodDescriptor"] as MethodDescriptor).Name%>(<%for(int i = 0; i < methodDescriptor.Parameters.Length; i++){ ParameterDescriptor parameter = methodDescriptor.Parameters[i]; if(i>0) Echo(", "); Echo("event."); Echo(parameter.Name); } %>);
		}
		   
		public function result( event : Object ) : void
		{
			var result:Object = (event as ResultEvent).result;
		}
				
		public function fault( event : Object ) : void
		{
			var faultEvent : FaultEvent = FaultEvent( event );
			Alert.show( event.fault.faultString + " : " + event.fault.faultDetail + " (" + event.fault.faultCode + ")", "Error" );
		}
	}
}
/*
 Generated by FluorineFx
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 
*/

package com.vertikalsystems.cairngorm.business 
{
	import com.adobe.cairngorm.business.Responder;
	import com.adobe.cairngorm.business.ServiceLocator;
	import com.vertikalsystems.cairngorm.vo.LoginVO;
	
	import flash.utils.setTimeout;
	
	import mx.rpc.AsyncToken;
	import mx.rpc.events.ResultEvent;
	
	public class LoginDelegate
	{
		private var responder : Responder;
		private var service : Object;
				
		public function LoginDelegate( responder : Responder )
		{
			//this.service = ServiceLocator.getInstance().getService( "loginService" );
			this.responder = responder;
		}
		
		public function login( loginVO : LoginVO ): void
		{
			//var token : AsyncToken = service.login( loginVO );
			//token.resultHandler = responder.onResult;
			//token.faultHandler = responder.onFault;
			
			//for demo purpose: simulate remote service result
			setTimeout( loginResult, 1000, loginVO );
		}
		
		private function loginResult( loginVO : LoginVO ): void
		{
			/*
			if( Math.random() > .5 )
			{
				responder.onResult( loginVO );
			}
			else
			{
				responder.onFault();
			}
			*/
			responder.onResult( loginVO );
		}	
	}
}
